{"version":3,"sources":["ResultTableComponent.js","DBHelper.js","FilterComponent.js","HomeView.js","ExploreView.js","FavoriteView.js","App.js","serviceWorker.js","index.js"],"names":["ResultTableComponent","_this","this","books","props","cart","emptyResultString","react_default","a","createElement","className","length","style","height","overflow","id","scope","map","book","index","key","BookName","AuthorName","Category","onClick","onCartUpdate","has","href","Links","target","React","Component","headers","content-type","api-Key","search","query","final_query","text","categories","fetch","method","then","res","json","data","value","FilterComponent","event","selectedOptions","nativeEvent","Object","values","o","onSelectCategories","type","name","defaultChecked","htmlFor","multiple","onChange","e","HomeView","state","language","format","modal","updateQueryText","queryText","setState","addAllBooks","onCartAddAll","removeAllBooks","onCartRemoveAll","preventDefault","ctx","DBHelper","_this2","src_FilterComponent","queryCategories","width","aria-label","placeholder","onSearchClicked","src_ResultTableComponent","mdbreact_esm","color","disabled","ExploreView","isModalOpen","collection","toggleCollectionModal","collectionName","assertThisInitialized","size","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","isAdded","err","return","catch","alert","closeCollectionModal","src","process","alt","isOpen","toggle","centered","FavoriteView","console","log","App","Map","navItem","toggleCartModal","item","delete","set","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","to","data-toggle","data-target","aria-controls","aria-expanded","updateNavItem","icon","Array","from","react_router","exact","path","render","src_HomeView","src_ExploreView","src_FavoriteView","Boolean","window","location","hostname","match","ReactDOM","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3dfaae04.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass ResultTableComponent extends React.Component {\n\n  render() {\n    const books = this.props.books;\n    const cart = this.props.cart;\n\n    let emptyResultString = \"Your list is empty!\";\n    if (this.props.emptyResultString)\n      emptyResultString = this.props.emptyResultString;\n\n    return (\n      <div className=\"m-4\">\n        {(!books || books.length === 0) &&\n        <p className=\"text-center w-responsive mx-auto mb-3\">{emptyResultString}</p>}\n\n        {books && books.length > 0 &&\n        <div style={{height: \"70vh\", overflow: \"auto\"}}>\n          <table id=\"dtVerticalScrollExample\" className=\"table table-striped\">\n            <thead className=\"primary-color white-text\">\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Book Name</th>\n              <th scope=\"col\">Author</th>\n              <th scope=\"col\">Category</th>\n              <th scope=\"col\">Action</th>\n            </tr>\n            </thead>\n            <tbody>\n            {books && books.map((book, index) =>\n              <tr key={index}>\n                <th scope=\"row\">{index + 1}</th>\n                <td>{book.BookName}</td>\n                <td>{book.AuthorName}</td>\n                <td>{book.Category}</td>\n                <td>\n                  <h6><a onClick={() => this.props.onCartUpdate(book)}>{cart.has(book.id) ?\n                    <span className=\"badge badge-danger\">Remove</span> :\n                    <span className=\"badge badge-success\">Add to cart</span>}</a>\n                  </h6>\n                  <h6><a href={book.Links[0]} target=\"_blank\"><span className=\"badge badge-info\">Download</span></a>\n                  </h6>\n                </td>\n              </tr>\n            )}\n            </tbody>\n          </table>\n        </div>}\n      </div>\n    );\n  }\n}\n\nexport default ResultTableComponent;","const api = \"https://librarysearchservice.search.windows.net/indexes/booksindex/docs?api-version=2019-05-06\";\n\nlet API_KEY = \"B886F1DAC41FB38BA0126061A30AE32A\"; // Temp API key\n\nconst headers = {\n  'content-type': 'application/json',\n  'api-Key': API_KEY\n};\n\n\nexport const search = (query) => {\n  let final_query = '';\n  if (query.text) {\n    final_query += '&search=' + query.text;\n  }\n\n  if (query.categories && query.categories.length > 0) {\n    final_query += \"&$filter=Category/any(t: search.in(t, '\" + query.categories + \"'))\";\n  }\n\n  return fetch(api + final_query, {\n    method: 'GET',\n    headers: headers,\n  }).then(res => res.json())\n    .then(data => data.value);\n};","import React from 'react';\n\n\nclass FilterComponent extends React.Component {\n\n  onSelectCategories(event) {\n    let selectedOptions = event.nativeEvent.target.selectedOptions;\n    let categories = Object.values(selectedOptions).map((o) => o.text);\n    this.props.onSelectCategories(categories);\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Filter</h2>\n        <section className=\"my-4\">\n          <h4>Language</h4>\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language1\"\n                   name=\"inlineDefaultRadiosExample\" defaultChecked={true}/>\n            <label className=\"custom-control-label\" htmlFor=\"language1\">English</label>\n          </div>\n\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language2\"\n                   name=\"inlineDefaultRadiosExample\"/>\n            <label className=\"custom-control-label\" htmlFor=\"language2\">Hindi</label>\n          </div>\n\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language3\"\n                   name=\"inlineDefaultRadiosExample\"/>\n            <label className=\"custom-control-label\" htmlFor=\"language3\">Spanish</label>\n          </div>\n        </section>\n\n        <section className=\"my-4\">\n          <h4>Format</h4>\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format1\" defaultChecked={true}/>\n            <label className=\"custom-control-label\" htmlFor=\"format1\">pdf</label>\n          </div>\n\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format2\" defaultChecked={true}/>\n            <label className=\"custom-control-label\" htmlFor=\"format2\">epub</label>\n          </div>\n\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format3\" defaultChecked={true}/>\n            <label className=\"custom-control-label\" htmlFor=\"format3\">txt</label>\n          </div>\n        </section>\n\n        <section className=\"my-4\">\n          <h4>Categories</h4>\n          <select className=\"custom-select\" style={{height: \"220px\"}} multiple\n                  onChange={(e) => this.onSelectCategories(e)}>\n            <option value=\"2\">Fiction</option>\n            <option value=\"3\">Poetry</option>\n            <option value=\"4\">Science</option>\n            <option value=\"5\">Economics</option>\n            <option value=\"6\">Psychology</option>\n            <option value=\"7\">History</option>\n            <option value=\"8\">Sociology</option>\n            <option value=\"9\">Mathematics</option>\n            <option value=\"1\">Geography</option>\n            <option value=\"10\">Computers</option>\n          </select>\n        </section>\n\n      </div>\n    );\n  }\n}\n\nexport default FilterComponent;","import React, {Component} from 'react';\nimport './App.css';\nimport {MDBBtn, MDBModalFooter} from \"mdbreact\";\nimport * as DBHelper from \"./DBHelper\";\nimport FilterComponent from \"./FilterComponent\";\nimport ResultTableComponent from \"./ResultTableComponent\";\n\nclass HomeView extends Component {\n  state = {\n    books: [],\n    query: {\"text\": \"\", \"language\": \"en\", \"format\": [], \"categories\": []},\n    modal: false\n  };\n\n  onSearchClicked(e) {\n    e.preventDefault();\n    let ctx = this;\n    DBHelper.search(this.state.query).then(function (books) {\n      if (books) {\n        ctx.setState({books: books});\n      }\n    });\n  }\n\n  updateQueryText = (queryText) => {\n    let query = this.state.query;\n    query.text = queryText;\n    this.setState({query: query});\n  };\n\n  addAllBooks = () => {\n    this.props.onCartAddAll(this.state.books);\n  };\n\n  removeAllBooks = () => {\n    this.props.onCartRemoveAll(this.state.books);\n  };\n\n  queryCategories(categories) {\n    let query = this.state.query;\n    query.categories = categories;\n\n    this.setState({query: query});\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row my-5\">\n          {/* Side bar filter component */}\n          <div className=\"col-md-3\">\n            <FilterComponent onSelectCategories={(categories) => this.queryCategories(categories)}/>\n          </div>\n\n          {/* Result list component */}\n          <div className=\"col-md-9\">\n            {/* Search bar */}\n            <form className=\"form-inline mx-4 mb-4\">\n              <input className=\"form-control\" style={{width: \"100%\"}} type=\"search\"\n                     aria-label=\"Search\"\n                     placeholder=\"Search by title or author\"\n                     value={this.state.query.text}\n                     onChange={(event) => this.updateQueryText(event.target.value)}/>\n              <button className=\"btn btn-primary btn-md ml-4 my-2 my-sm-0\"\n                      onClick={(e) => this.onSearchClicked(e)}>Search\n              </button>\n            </form>\n\n            {/* Result table */}\n            <ResultTableComponent books={this.state.books}\n                                  cart={this.props.cart}\n                                  onCartUpdate={(id) => this.props.onCartUpdate(id)}\n                                  emptyResultString={\"\"}/>\n\n            {/* Remove/Add All Buttons */}\n            {this.state.books && this.state.books.length > 0 &&\n            <MDBModalFooter>\n              <MDBBtn color=\"danger\" disabled={this.state.books <= 0}\n                      onClick={this.removeAllBooks}>Remove all</MDBBtn>\n              <MDBBtn color=\"primary\" disabled={this.state.books <= 0}\n                      onClick={this.addAllBooks}>Add all</MDBBtn>\n            </MDBModalFooter>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomeView;","import React, {Component} from 'react';\nimport './App.css';\nimport {\n  MDBBtn, MDBModal, MDBModalFooter, MDBModalHeader,\n} from \"mdbreact\";\nimport ResultTableComponent from \"./ResultTableComponent\";\nimport * as DBHelper from \"./DBHelper\";\n\nclass ExploreView extends Component {\n  state = {\n    isModalOpen: false,\n    collection: {name: null, books: []}\n  };\n\n  toggleCollectionModal = (collectionName) => {\n    if (collectionName) {\n      let ctx = this;\n      DBHelper.search({text: collectionName}).then(function (books) {\n        if (books) {\n          if (ctx.props.cart.size > 0) {\n            for (let book of books) {\n              if (ctx.props.cart.has(book.id)) {\n                book.isAdded = true;\n              }\n            }\n          }\n          let collection = {name: collectionName, books: books};\n          ctx.setState({\n            isModalOpen: true,\n            collection: collection\n          });\n        }\n      }).catch((e) => {\n        alert(\"Failed to retrieve collection!\");\n      });\n    } else {\n      this.setState({\n        isModalOpen: false,\n        collection: {name: null, books: []}\n      });\n    }\n  };\n\n  addAllBooks = () => {\n    this.props.onCartAddAll(this.state.collection.books);\n  };\n\n  removeAllBooks = () => {\n    this.props.onCartRemoveAll(this.state.collection.books);\n  };\n\n  closeCollectionModal = () => {\n    this.toggleCollectionModal(null)\n  };\n\n  render() {\n    return (\n      <div className=\"container my-5\">\n        <h1 className=\"text-center\">Most Downloaded</h1>\n        <div className=\"row mt-4 mb-5\">\n          {/*Card deck*/}\n          <div className=\"card-deck\">\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src={process.env.PUBLIC_URL + \"/assets/library.png\"}\n                     alt=\"Card image cap\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">K-12 US Literature</h4>\n                <h6>Curated by <a>Robert Koester</a></h6>\n                <p>Language: English</p>\n                <p className=\"card-text\">This collection comprises works of American literature from colonial to\n                  contemporary times, including poetry, short\n                  stories, novels, drama, and nonfiction. The literary works provide opportunities for critical writing,\n                  creative projects, and online discussions. Students develop vocabulary skills and refresh their\n                  knowledge of grammar, usage, and mechanics in preparation for standardized tests.</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"K-12 US Literature\")}>Open collection\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src={process.env.PUBLIC_URL + \"/assets/stem.png\"}\n                     alt=\"Card image cap\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">STEM for high school students</h4>\n                <h6>Curated by <a>Darren Moffatt</a></h6>\n                <p>Language: English, Spanish</p>\n                <p className=\"card-text\">Discover meaningful, rigorous books and text sets for a fresh take on\n                  STEM/STEAM\n                  study. Our books explore the physical, life, health, earth and space sciences along with engineering,\n                  art, mathematics, and technology. These high-interest nonfiction, realistic fiction, and science\n                  fiction\n                  books provide an engaging opportunity to discuss timely topics that will expand student knowledge and\n                  inspire the scientists of the future.</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"STEM for high school students\")}>Open collection\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src={process.env.PUBLIC_URL + \"/assets/fairy_tale.jpg\"}\n                     alt=\"Card image cap\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Fairy Tales</h4>\n                <h6>Curated by <a>Vivian Guo</a></h6>\n                <p>Language: English</p>\n                <p className=\"card-text\">Read our huge collection of famous fairy tales and bedtime stories. Brothers\n                  Grimm fairy tales, Hans Christian Andersen, Charles Perrault, Aesop's fables,...</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"Fairy Tales\")}>Open collection\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <h1 className=\"text-center\">Newest Collections</h1>\n        <div className=\"row mt-4 mb-5\">\n          {/*Card deck*/}\n          <div className=\"card-deck\">\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src={process.env.PUBLIC_URL + \"/assets/books_love.jpg\"}\n                     alt=\"Card image cap\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">For the Love of Books</h4>\n                <h6>Curated by <a>Jupiter Books</a></h6>\n                <p>Language: English</p>\n                <p className=\"card-text\">For the Love of Books gathers all of Thatcher Wine's philosophy about books,\n                  curating and designing libraries into one volume. Explore the significance of the home library,\n                  embellished with alluring photography and illustrations, in a keepsake worthy of any bibliophile’s\n                  collection. For the Love of Books shares the vision of Juniper Books, and embraces the roles that\n                  books fulfill in our lives and their staying power.</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"For the Love of Books\")}>Open collection\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src={process.env.PUBLIC_URL + \"/assets/african_books.jpg\"}\n                     alt=\"Card image cap\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">African History</h4>\n                <h6>Curated by <a>Michelle Lee</a></h6>\n                <p>Language: English, Spanish</p>\n                <p className=\"card-text\">African history is a massive and intricate subject, world-shaking events have\n                  shaped the continent's history, from the early men and women who left their footsteps in volcanic ash\n                  to the liberation of Nelson Mandela, and a whole lot of wars, conquests, civilisations and revolutions\n                  in between.</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"African History\")}>Open collection\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src={process.env.PUBLIC_URL + \"/assets/comicbooks.jpg\"}\n                     alt=\"Card image cap\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Comic Books</h4>\n                <h6>Curated by <a>Tina Wen</a></h6>\n                <p>Language: English</p>\n                <p className=\"card-text\">My Dad and I share a passion for comics. I show you guys our highlighted key\n                  issues from our silver age comic book collection! We both have many more key comics from all eras\n                  (Golden Age, Silver Age, Bronze Age and later) and thousands upon thousands more comics over all!\n                </p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"Comic Books\")}>Open collection\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <h1 className=\"text-center\">High School Book Collections</h1>\n        <div className=\"row mt-4 mb-5\">\n          {/*Card deck*/}\n          <div className=\"card-deck\">\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src={process.env.PUBLIC_URL + \"/assets/library.png\"}\n                     alt=\"Card image cap\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Math for Middle School Students</h4>\n                <h6>Curated by <a>Robert Koester</a></h6>\n                <p>Language: English</p>\n                <p className=\"card-text\">This collection comprises works of American literature from colonial to\n                  contemporary times, including poetry, short\n                  stories, novels, drama, and nonfiction. The literary works provide opportunities for critical writing,\n                  creative projects, and online discussions. Students develop vocabulary skills and refresh their\n                  knowledge of grammar, usage, and mechanics in preparation for standardized tests.</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"K-12 US Literature\")}>Open collection\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src={process.env.PUBLIC_URL + \"/assets/stem.png\"}\n                     alt=\"Card image cap\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">STEM for high school students</h4>\n                <h6>Curated by <a>Darren Moffatt</a></h6>\n                <p>Language: English, Spanish</p>\n                <p className=\"card-text\">Discover meaningful, rigorous books and text sets for a fresh take on\n                  STEM/STEAM\n                  study. Our books explore the physical, life, health, earth and space sciences along with engineering,\n                  art, mathematics, and technology. These high-interest nonfiction, realistic fiction, and science\n                  fiction\n                  books provide an engaging opportunity to discuss timely topics that will expand student knowledge and\n                  inspire the scientists of the future.</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"STEM for high school students\")}>Open collection\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src={process.env.PUBLIC_URL + \"/assets/african_books.jpg\"}\n                     alt=\"Card image cap\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">African History</h4>\n                <h6>Curated by <a>Michelle Lee</a></h6>\n                <p>Language: English, Spanish</p>\n                <p className=\"card-text\">African history is a massive and intricate subject, world-shaking events have\n                  shaped the continent's history, from the early men and women who left their footsteps in volcanic ash\n                  to the liberation of Nelson Mandela, and a whole lot of wars, conquests, civilisations and revolutions\n                  in between.</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"African History\")}>Open collection\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <MDBModal isOpen={this.state.isModalOpen} toggle={this.closeCollectionModal} centered size=\"lg\">\n          <MDBModalHeader toggle={this.closeCollectionModal}>{this.state.collection.name}</MDBModalHeader>\n          <ResultTableComponent books={this.state.collection.books}\n                                cart={this.props.cart}\n                                onCartUpdate={(id) => this.props.onCartUpdate(id)}\n                                emptyResultString={\"Collection result is empty!\"}/>\n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={this.closeCollectionModal}>Close</MDBBtn>\n            <MDBBtn color=\"danger\" disabled={this.state.collection.books <= 0}\n                    onClick={this.removeAllBooks}>Remove all</MDBBtn>\n            <MDBBtn color=\"primary\" disabled={this.state.collection.books <= 0}\n                    onClick={this.addAllBooks}>Add all</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </div>\n    );\n  }\n}\n\nexport default ExploreView;\n","import React, {Component} from 'react';\nimport './App.css';\nimport {\n  MDBBtn, MDBModal, MDBModalFooter, MDBModalHeader,\n} from \"mdbreact\";\nimport ResultTableComponent from \"./ResultTableComponent\";\nimport * as DBHelper from \"./DBHelper\";\n\nclass FavoriteView extends Component {\n  state = {\n    isModalOpen: false,\n    collection: {name: null, books: []}\n  };\n\n  toggleCollectionModal = (collectionName) => {\n    if (collectionName) {\n      let ctx = this;\n      DBHelper.search({text: \"*\"}).then(function (books) {\n        console.log(books);\n        if (books) {\n          if (ctx.props.cart.size > 0) {\n            for (let book of books) {\n              if (ctx.props.cart.has(book.id)) {\n                book.isAdded = true;\n              }\n            }\n          }\n          let collection = {name: collectionName, books: books};\n          ctx.setState({\n            isModalOpen: true,\n            collection: collection\n          });\n        }\n      }).catch((e) => {\n        console.log(e);\n        alert(\"Failed to retrieve collection!\");\n      });\n    } else {\n      this.setState({\n        isModalOpen: false,\n        collection: {name: null, books: []}\n      });\n    }\n  };\n\n  addAllBooks = () => {\n    this.props.onCartAddAll(this.state.collection.books);\n  };\n\n  removeAllBooks = () => {\n    this.props.onCartRemoveAll(this.state.collection.books);\n  };\n\n  closeCollectionModal = () => {\n    this.toggleCollectionModal(null)\n  };\n\n  render() {\n    return (\n      <div className=\"container my-5\">\n        <h1 className=\"text-center\">My Favorites</h1>\n        <p className=\"text-center\">Your favorite collections</p>\n        <div className=\"row mt-4 mb-5\">\n          {/*Card deck*/}\n          <div className=\"card-deck\">\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src={process.env.PUBLIC_URL + \"/assets/rocket.jpg\"}\n                     alt=\"Rocket ship\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Sci-fi Literature</h4>\n                <h6>Curated by <a>Jurels Neve</a></h6>\n                <p>Language: English, Francais</p>\n                <p className=\"card-text\">Blast off with extraordinary tales featuring time travel, parallel universes,\n                  space exploration, extraterrestrial life and more!.</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"Sci-fi Literature\")}>Open collection\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src={process.env.PUBLIC_URL + \"/assets/childrens_books.jpg\"}\n                     alt=\"A stack of children's books\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Hindi Children's Books</h4>\n                <h6>Curated by <a>Bindi Soohk</a></h6>\n                <p>Language: Hindi</p>\n                <p className=\"card-text\">यह सारांश हिंदी में है। मुझे कोई हिंदी नहीं आती इसलिए आपको इस बुरी तरह से\n                  अनुवादित पाठ को पढ़ना होगा। इस भयानक वर्णन के लिए क्षमा करें, लेकिन यह सबसे अच्छा है जिसे आप यहाँ\n                  प्राप्त करने जा रहे हैं।</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"Hindi Children's Books\")}>Open collection\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src={process.env.PUBLIC_URL + \"/assets/danish.jpg\"}\n                     alt=\"A guy stands at the bow of a ship\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Scandinavian History</h4>\n                <h6>Curated by <a>Khang Vu</a></h6>\n                <p>Language: Dansk, Suomalainen, Svenska</p>\n                <p className=\"card-text\">Dette resume er på dansk. Jeg kender ingen dansk. Så du bliver bare nødt til at\n                  læse denne dårligt oversatte tekst.\n                  Undskyld for denne forfærdelige beskrivelse, men dette er det bedste, du kommer hertil. Jeg kender\n                  heller ikke nogen af de andre sprog, der er anført i beskrivelsesfeltet. Tak.</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"Scandinavian History\")}>Open collection\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <MDBModal isOpen={this.state.isModalOpen} toggle={this.closeCollectionModal} centered size=\"lg\">\n          <MDBModalHeader toggle={this.closeCollectionModal}>{this.state.collection.name}</MDBModalHeader>\n          <ResultTableComponent books={this.state.collection.books}\n                                cart={this.props.cart}\n                                onCartUpdate={(id) => this.props.onCartUpdate(id)}\n                                emptyResultString={\"Collection result is empty!\"}/>\n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={this.closeCollectionModal}>Close</MDBBtn>\n            <MDBBtn color=\"danger\" disabled={this.state.collection.books <= 0}\n                    onClick={this.removeAllBooks}>Remove all</MDBBtn>\n            <MDBBtn color=\"primary\" disabled={this.state.collection.books <= 0}\n                    onClick={this.addAllBooks}>Add all</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </div>\n    );\n  }\n}\n\nexport default FavoriteView;\n","import React, {Component} from 'react';\nimport {Route} from \"react-router-dom\";\nimport './App.css';\nimport {\n  MDBBtn, MDBContainer, MDBModal, MDBModalFooter, MDBModalHeader, NavLink, MDBIcon\n} from \"mdbreact\";\nimport ResultTableComponent from \"./ResultTableComponent\";\nimport HomeView from \"./HomeView\";\nimport ExploreView from \"./ExploreView\";\nimport FavoriteView from \"./FavoriteView\";\n\nclass App extends Component {\n  state = {\n    cart: new Map(),\n    modal: false,\n    navItem: ''\n  };\n\n  updateNavItem(item) {\n    /**\n     * Update the navItem state, which will essentially\n     * activate/deactivate active items on the nav bar.\n     *\n     * @item: a url path of navigation item\n     */\n    this.setState({navItem: item});\n  }\n\n  toggleCartModal = () => {\n    /**\n     * Toggle the cart modal to view the list of items in cart.\n     **/\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onCartUpdate(book) {\n    /**\n     * This function has two operations. It either removes a book from cart\n     * or add a book to cart.\n     *\n     * @book: selected book object\n     */\n    let cart = this.state.cart;\n\n    if (cart.has(book.id)) {\n      cart.delete(book.id);\n    } else {\n      cart.set(book.id, book);\n    }\n\n    this.setState({cart: cart});\n  }\n\n  onCartAddAll(books) {\n    /**\n     * Add all corresponding books in cart.\n     *\n     * @books: books to add\n     */\n    for (let book of books) {\n      let cart = this.state.cart;\n      cart.set(book.id, book);\n      this.setState({cart: cart});\n    }\n  }\n\n  onCartRemoveAll(books) {\n    /**\n     * Remove all corresponding books in cart.\n     *\n     * @books: books to remove\n     */\n    for (let book of books) {\n      let cart = this.state.cart;\n      cart.delete(book.id);\n      this.setState({cart: cart});\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Nav bar */}\n        <nav className=\"navbar navbar-expand-lg navbar-dark primary-color\">\n          {/* Brand button */}\n          <NavLink className=\"navbar-brand\" to=\"/\" href=\"/\">Dongle Library</NavLink>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n                  aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"/>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n            <ul className=\"navbar-nav mr-auto\">\n              {/* Home button */}\n              <li className={\"nav-item\" + (this.state.navItem === '' ? \" active\" : \"\")}>\n                <NavLink className=\"nav-link\" to=\"/\" href={'/'}\n                         onClick={() => this.updateNavItem('')}>Home\n                  <span className=\"sr-only\">(current)</span>\n                </NavLink>\n              </li>\n              {/* Explore button */}\n              <li className={\"nav-item\" + (this.state.navItem === '/explore' ? \" active\" : \"\")}>\n                <NavLink className=\"nav-link\" to=\"/explore\" href={'/explore'}\n                         onClick={() => this.updateNavItem('/explore')}>Explore\n                  <span className=\"sr-only\">(current)</span>\n                </NavLink>\n              </li>\n              {/* Favorite button */}\n              <li className={\"nav-item\" + (this.state.navItem === '/favorite' ? \" active\" : \"\")}>\n                <NavLink className=\"nav-link\" to=\"/favorite\" href={'/favorite'}\n                         onClick={() => this.updateNavItem('/favorite')}>Favorite\n                  <span className=\"sr-only\">(current)</span>\n                </NavLink>\n              </li>\n            </ul>\n\n            <div className=\"navbar-right\">\n              <MDBContainer>\n                {/* Cart button */}\n                <MDBBtn onClick={this.toggleCartModal}>\n                  <MDBIcon icon=\"shopping-cart\" className={\"mr-2\"}/>Cart\n                  <span className=\"badge badge-danger ml-2\">\n                    {this.state.cart.size > 100 ? \"100+\" : this.state.cart.size}\n                  </span>\n                </MDBBtn>\n\n                {/* Cart modal */}\n                <MDBModal isOpen={this.state.modal} toggle={this.toggleCartModal} centered size=\"lg\">\n                  <MDBModalHeader toggle={this.toggleCartModal}>Cart</MDBModalHeader>\n                  <ResultTableComponent books={Array.from(this.state.cart.values())}\n                                        cart={this.state.cart}\n                                        onCartUpdate={(id) => this.onCartUpdate(id)}\n                                        emptyResultString={\"Your cart is empty!\"}/>\n                  <MDBModalFooter>\n                    <MDBBtn color=\"secondary\" onClick={this.toggleCartModal}>Close</MDBBtn>\n                    <MDBBtn color=\"primary\" disabled={this.state.cart.size <= 0}>Download Now</MDBBtn>\n                  </MDBModalFooter>\n                </MDBModal>\n              </MDBContainer>\n            </div>\n          </div>\n        </nav>\n\n        {/* Route to home page */}\n        <Route exact path={['/', '/front-end']} render={() => (\n          <HomeView cart={this.state.cart}\n                    onCartUpdate={(id) => this.onCartUpdate(id)}\n                    onCartAddAll={(books) => this.onCartAddAll(books)}\n                    onCartRemoveAll={(books) => this.onCartRemoveAll(books)}/>\n        )}/>\n\n        {/* Route to explore page */}\n        <Route exact path={'/explore'} render={() => (\n          <ExploreView cart={this.state.cart}\n                       onCartUpdate={(id) => this.onCartUpdate(id)}\n                       onCartAddAll={(books) => this.onCartAddAll(books)}\n                       onCartRemoveAll={(books) => this.onCartRemoveAll(books)}/>\n        )}/>\n\n        {/* Route to favorite page */}\n        <Route exact path={'/favorite'} render={() => (\n          <FavoriteView cart={this.state.cart}\n                        onCartUpdate={(id) => this.onCartUpdate(id)}\n                        onCartAddAll={(books) => this.onCartAddAll(books)}\n                        onCartRemoveAll={(books) => this.onCartRemoveAll(books)}/>\n        )}/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onCartUpdate) {\n                config.onCartUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}