{"version":3,"sources":["DBHelper.js","ResultTableComponent.js","FilterComponent.js","Cart.js","App.js","serviceWorker.js","index.js"],"names":["headers","content-type","api-Key","ResultTableComponent","_this","this","books","props","react_default","a","createElement","className","scope","map","book","index","key","BookName","Author","Category","onClick","onAdded","isAdded","React","Component","type","id","name","defaultChecked","htmlFor","style","height","multiple","value","Cart","mdbreact_esm","src","alt","width","href","App","state","query","text","language","format","categories","cart","Set","modal","updateQueryText","queryText","setState","toggle","e","preventDefault","ctx","fetch","method","then","res","json","data","console","log","delete","add","_this2","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","onChange","event","target","onSearchClicked","size","isOpen","centered","src_Cart","color","FilterComponent","src_ResultTableComponent","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5f3f2a6.chunk.js","sourcesContent":["const api = \"https://librarysearchservice.search.windows.net/indexes/mockdata/docs?api-version=2019-05-06&search=\";\n\nlet API_KEY = \"B886F1DAC41FB38BA0126061A30AE32A\"; // Temp API key\n\nconst headers = {\n  'content-type': 'application/json',\n  'api-Key': API_KEY\n};\n\n\nexport const search = (query) => {\n  return fetch(api + query.text, {\n    method: 'GET',\n    headers: headers,\n  }).then(res => res.json())\n    .then(data => data.value);\n};","import React from 'react';\n\n\nclass ResultTableComponent extends React.Component {\n\n  render() {\n    const {books} = this.props;\n    return (\n      <table className=\"table\">\n        <thead className=\"primary-color white-text\">\n        <tr>\n          <th scope=\"col\"/>\n          <th scope=\"col\">Book Name</th>\n          <th scope=\"col\">Author</th>\n          <th scope=\"col\">Category</th>\n          <th scope=\"col\">Add to cart</th>\n        </tr>\n        </thead>\n        <tbody>\n        {books && books.map((book, index) =>\n          <tr key={index}>\n            <th scope=\"row\">{index + 1}</th>\n            <td>{book.BookName}</td>\n            <td>{book.Author}</td>\n            <td>{book.Category}</td>\n            <td><h6><a onClick={() => this.props.onAdded(index)}>{book.isAdded ?\n              <span className=\"badge badge-danger\">\"Remove\"</span> :\n              <span className=\"badge badge-success\">\"Add\"</span>}</a></h6></td>\n          </tr>\n        )}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default ResultTableComponent;","import React from 'react';\n\n\nclass ResultTableComponent extends React.Component {\n\n\n  render() {\n    return (\n      <div>\n        <h2>Filter</h2>\n        <section className=\"my-4\">\n          <h4>Language</h4>\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language1\"\n                   name=\"inlineDefaultRadiosExample\" defaultChecked={true}/>\n            <label className=\"custom-control-label\" htmlFor=\"language1\">English</label>\n          </div>\n\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language2\"\n                   name=\"inlineDefaultRadiosExample\"/>\n            <label className=\"custom-control-label\" htmlFor=\"language2\">Hindi</label>\n          </div>\n\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language3\"\n                   name=\"inlineDefaultRadiosExample\"/>\n            <label className=\"custom-control-label\" htmlFor=\"language3\">Spanish</label>\n          </div>\n        </section>\n\n        <section className=\"my-4\">\n          <h4>Format</h4>\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format1\" defaultChecked={true}/>\n            <label className=\"custom-control-label\" htmlFor=\"format1\">pdf</label>\n          </div>\n\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format2\" defaultChecked={true}/>\n            <label className=\"custom-control-label\" htmlFor=\"format2\">epub</label>\n          </div>\n\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format3\" defaultChecked={true}/>\n            <label className=\"custom-control-label\" htmlFor=\"format3\">txt</label>\n          </div>\n        </section>\n\n        <section className=\"my-4\">\n          <h4>Categories</h4>\n          <select className=\"custom-select\" style={{height: \"500px\"}} multiple>\n            <option value=\"2\">Math</option>\n            <option value=\"3\">Science</option>\n            <option value=\"4\">Arts & Music</option>\n            <option value=\"5\">Biographies</option>\n            <option value=\"6\">Business</option>\n            <option value=\"7\">Finance</option>\n            <option value=\"8\">Economics</option>\n            <option value=\"9\">Computers & Tech</option>\n            <option value=\"1\">Fairy Tales</option>\n            <option value=\"10\">Fiction</option>\n          </select>\n        </section>\n\n      </div>\n    );\n  }\n}\n\nexport default ResultTableComponent;","import React from 'react';\nimport './App.css';\nimport {MDBModalBody} from \"mdbreact\";\n\nfunction Cart() {\n    return (\n    \t<div className=\"Cart\">\n\t\t\t<MDBModalBody>\n\t\t\t\t{/*(...)*/}\n\n\n\t\t\t\t<div>\n\t\t\t\t\t{/*Card deck*/}\n\t\t\t\t\t<div className=\"card-deck\">\n\t\t\t\t\t\t{/*Card*/}\n\t\t\t\t\t\t<div className=\"card xs-4\">\n\n\t\t\t\t\t\t\t{/*Card image*/}\n\t\t\t\t\t\t\t<div className=\"view overlay\">\n\t\t\t\t\t\t\t\t<img src=\"assets/book.png\" alt=\"Default book image\" style={{\n\t\t\t\t\t\t\t\t\theight: '24px',\n\t\t\t\t\t\t\t\t\twidth: '24px',\n\t\t\t\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t\t\t\t<a href=\"#!\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"mask rgba-white-slight\"></div>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{/*Card content*/}\n\t\t\t\t\t\t\t<div className=\"card-body\">\n\n\n\t\t\t\t\t\t\t\t<h4 className=\"card-title\">Card title</h4>\n\n\t\t\t\t\t\t\t\t<p className=\"card-text\">Some quick example text to build on the card title and make up\n\t\t\t\t\t\t\t\t\tthe bulk\n\t\t\t\t\t\t\t\t\tof\n\t\t\t\t\t\t\t\t\tthe card's content.</p>\n\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t<div className=\"card mb-4\">\n\n\n\t\t\t\t\t\t\t<div className=\"view overlay\">\n\t\t\t\t\t\t\t\t<img className=\"card-img-top\"\n\t\t\t\t\t\t\t\t\t src=\"https://mdbootstrap.com/img/Photos/Others/images/15.jpg\"\n\t\t\t\t\t\t\t\t\t alt=\"Card image cap\"/>\n\t\t\t\t\t\t\t\t\t<a href=\"#!\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"mask rgba-white-slight\"></div>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div className=\"card-body\">\n\n\n\t\t\t\t\t\t\t\t<h4 className=\"card-title\">Card title</h4>\n\n\t\t\t\t\t\t\t\t<p className=\"card-text\">Some quick example text to build on the card title and make up\n\t\t\t\t\t\t\t\t\tthe bulk\n\t\t\t\t\t\t\t\t\tof\n\t\t\t\t\t\t\t\t\tthe card's content.</p>\n\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-light-blue btn-md\">Read more</button>\n\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t</div>\n\n\n\t\t\t</div>\n\t\t\t</MDBModalBody>\n\t\t</div>\n\t);\n}\n\nexport default Cart;\n","import React, {Component} from 'react';\nimport * as DBHelper from './DBHelper'\nimport './App.css';\nimport ResultTableComponent from \"./ResultTableComponent\";\nimport FilterComponent from \"./FilterComponent\";\nimport {MDBBtn, MDBContainer, MDBModal, MDBModalFooter, MDBModalHeader} from \"mdbreact\";\nimport Cart from \"./Cart\";\n\nclass App extends Component {\n  state = {\n    query: {\"text\": \"\", \"language\": \"en\", \"format\": [], \"categories\": []},\n    books: [],\n    cart: new Set(),\n    modal: false\n  };\n\n  componentDidMount() {\n\n  }\n\n  onSearchClicked(e) {\n    e.preventDefault();\n    let ctx = this;\n    DBHelper.search(this.state.query).then(function (books) {\n      console.log(books);\n      if (books) {\n        ctx.setState({books: books});\n      }\n    });\n  }\n\n  updateQueryText = (queryText) => {\n    let query = this.state.query;\n    query.text = queryText;\n    this.setState({query: query});\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onAdded(index) {\n    let books = this.state.books;\n    let cart = this.state.cart;\n    if (books[index].isAdded) {\n      books[index].isAdded = false;\n      cart.delete(books[index])\n    } else {\n      books[index].isAdded = true;\n      cart.add(books[index]);\n    }\n    console.log(cart);\n    this.setState({books: books, cart: cart});\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-dark primary-color\">\n          <a className=\"navbar-brand\" href=\"#\">Dongle Library</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n                  aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"/>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item active\">\n                <a className=\"nav-link\" href=\"#\">Home\n                  <span className=\"sr-only\">(current)</span>\n                </a>\n              </li>\n            </ul>\n            <div className=\"navbar-right\">\n              <form className=\"form-inline my-2 my-lg-0 ml-auto\">\n                <input className=\"form-control\" style={{width: \"600px\"}} type=\"search\"\n                       aria-label=\"Search\"\n                       placeholder=\"Search by title or author\"\n                       value={this.state.query.text}\n                       onChange={(event) => this.updateQueryText(event.target.value)}/>\n                <button className=\"btn btn-outline-white btn-md my-2 my-sm-0 ml-3\"\n                        onClick={(e) => this.onSearchClicked(e)}>Search\n                </button>\n              </form>\n              <MDBContainer>\n                <MDBBtn onClick={this.toggle}>Cart <span\n                  className=\"badge badge-danger ml-2\">{this.state.cart.size > 20 ? \"20+\" : this.state.cart.size}</span>\n                </MDBBtn>\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle} centered>\n                  <MDBModalHeader toggle={this.toggle}>Cart</MDBModalHeader>\n                  <Cart/>\n                  <MDBModalFooter>\n                    <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\n                    <MDBBtn color=\"primary\">Download Now</MDBBtn>\n                  </MDBModalFooter>\n                </MDBModal>\n              </MDBContainer>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"container\">\n          <div className=\"row my-5\">\n            {/* Side bar filter component */}\n            <div className=\"col-md-3\">\n              <FilterComponent/>\n            </div>\n\n            {/* Result list component */}\n            <div className=\"col-md-9\">\n              <ResultTableComponent books={this.state.books} onAdded={(index) => this.onAdded(index)}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Cart from './Cart';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\nReactDOM.render(<Router>\n    <div>\n        <div className=\"main\">\n            <Route exact path=\"/\" component={App}/>\n            <Route exact path=\"/cart\" component={Cart}/>\n        </div>\n    </div>\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}