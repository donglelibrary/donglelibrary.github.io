{"version":3,"sources":["DBHelper.js","ResultTableComponent.js","FilterComponent.js","Cart.js","App.js","serviceWorker.js","index.js"],"names":["headers","content-type","api-Key","search","query","fetch","method","then","res","json","data","value","ResultTableComponent","books","this","props","react_default","a","createElement","className","scope","map","book","index","key","BookName","Author","Category","React","Component","type","id","name","htmlFor","multiple","Cart","mdbreact_esm","src","alt","style","height","width","href","App","state","modal","updateQuery","_this","setState","ctx","Object","assertThisInitialized","timeout","clearTimeout","DBHelper","console","log","toggle","_this2","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","onChange","event","target","onClick","isOpen","centered","src_Cart","color","FilterComponent","src_ResultTableComponent","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ffe52066.chunk.js","sourcesContent":["const api = \"https://librarysearchservice.search.windows.net/indexes/mockdata/docs?api-version=2019-05-06&search=*\";\r\n\r\nlet API_KEY = \"B886F1DAC41FB38BA0126061A30AE32A\"; // Temp API key\r\n\r\nconst headers = {\r\n  'content-type': 'application/json',\r\n  'api-Key': API_KEY\r\n};\r\n\r\n\r\nexport const search = (query) =>\r\n  fetch(api, {\r\n    method: 'GET',\r\n    headers: headers,\r\n  }).then(res => res.json()).then(data => data.value);\r\n","import React from 'react';\r\n\r\n\r\nclass ResultTableComponent extends React.Component {\r\n\r\n  render() {\r\n    const {books} = this.props;\r\n    return (\r\n      <table className=\"table\">\r\n        <thead className=\"primary-color white-text\">\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Book Name</th>\r\n          <th scope=\"col\">Author</th>\r\n          <th scope=\"col\">Category</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {books && books.map((book, index) =>\r\n          <tr key={index}>\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td>{book.BookName}</td>\r\n            <td>{book.Author}</td>\r\n            <td>{book.Category}</td>\r\n          </tr>\r\n        )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultTableComponent;","import React from 'react';\r\n\r\n\r\nclass ResultTableComponent extends React.Component {\r\n\r\n  render() {\r\n    const {books} = this.props;\r\n    return (\r\n      <div>\r\n        <h2>Filter</h2>\r\n        <section className=\"my-4\">\r\n          <h4>Language</h4>\r\n          <div className=\"custom-control custom-radio custom-control-inline\">\r\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language1\"\r\n                   name=\"inlineDefaultRadiosExample\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"language1\">English</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-radio custom-control-inline\">\r\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language2\"\r\n                   name=\"inlineDefaultRadiosExample\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"language2\">Hindi</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-radio custom-control-inline\">\r\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language3\"\r\n                   name=\"inlineDefaultRadiosExample\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"language3\">Spanish</label>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"my-4\">\r\n          <h4>Format</h4>\r\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format1\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"format1\">pdf</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format2\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"format2\">epub</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format3\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"format3\">txt</label>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"my-4\">\r\n          <h4>Categories</h4>\r\n          <select className=\"custom-select\" multiple>\r\n            <option value=\"1\">Fairy Tales</option>\r\n            <option value=\"2\">Math</option>\r\n            <option value=\"3\">Science</option>\r\n            <option value=\"4\">Arts & Music</option>\r\n            <option value=\"5\">Biographies</option>\r\n            <option value=\"6\">Business</option>\r\n            <option value=\"7\">Finance</option>\r\n            <option value=\"8\">Economics</option>\r\n            <option value=\"9\">Computers & Tech</option>\r\n          </select>\r\n        </section>\r\n\r\n        <section className=\"my-4\">\r\n          <h4>Source</h4>\r\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"source1\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"source1\">Something</label>\r\n          </div>\r\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"source2\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"source2\">Something-2</label>\r\n          </div>\r\n\r\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\r\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"source3\"/>\r\n            <label className=\"custom-control-label\" htmlFor=\"source3\">Something-3</label>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultTableComponent;","import React from 'react';\r\nimport './App.css';\r\nimport {MDBBtn, MDBContainer, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader} from \"mdbreact\";\r\n\r\nfunction Cart() {\r\n    return (\r\n    \t<div className=\"Cart\">\r\n\t\t\t<MDBModalBody>\r\n\t\t\t\t{/*(...)*/}\r\n\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{/*Card deck*/}\r\n\t\t\t\t\t<div className=\"card-deck\">\r\n\t\t\t\t\t\t{/*Card*/}\r\n\t\t\t\t\t\t<div className=\"card xs-4\">\r\n\r\n\t\t\t\t\t\t\t{/*Card image*/}\r\n\t\t\t\t\t\t\t<div className=\"view overlay\">\r\n\t\t\t\t\t\t\t\t<img src=\"assets/book.png\" alt=\"Default book image\" style={{\r\n\t\t\t\t\t\t\t\t\theight: '24px',\r\n\t\t\t\t\t\t\t\t\twidth: '24px',\r\n\t\t\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t\t\t\t<a href=\"#!\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mask rgba-white-slight\"></div>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{/*Card content*/}\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\r\n\r\n\t\t\t\t\t\t\t\t<h4 className=\"card-title\">Card title</h4>\r\n\r\n\t\t\t\t\t\t\t\t<p className=\"card-text\">Some quick example text to build on the card title and make up\r\n\t\t\t\t\t\t\t\t\tthe bulk\r\n\t\t\t\t\t\t\t\t\tof\r\n\t\t\t\t\t\t\t\t\tthe card's content.</p>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className=\"card mb-4\">\r\n\r\n\r\n\t\t\t\t\t\t\t<div className=\"view overlay\">\r\n\t\t\t\t\t\t\t\t<img className=\"card-img-top\"\r\n\t\t\t\t\t\t\t\t\t src=\"https://mdbootstrap.com/img/Photos/Others/images/15.jpg\"\r\n\t\t\t\t\t\t\t\t\t alt=\"Card image cap\"/>\r\n\t\t\t\t\t\t\t\t\t<a href=\"#!\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"mask rgba-white-slight\"></div>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\r\n\r\n\t\t\t\t\t\t\t\t<h4 className=\"card-title\">Card title</h4>\r\n\r\n\t\t\t\t\t\t\t\t<p className=\"card-text\">Some quick example text to build on the card title and make up\r\n\t\t\t\t\t\t\t\t\tthe bulk\r\n\t\t\t\t\t\t\t\t\tof\r\n\t\t\t\t\t\t\t\t\tthe card's content.</p>\r\n\r\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-light-blue btn-md\">Read more</button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t\t</MDBModalBody>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Cart;\r\n","import React, {Component} from 'react';\r\nimport * as DBHelper from './DBHelper'\r\nimport './App.css';\r\nimport ResultTableComponent from \"./ResultTableComponent\";\r\nimport FilterComponent from \"./FilterComponent\";\r\nimport {MDBBtn, MDBContainer, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader} from \"mdbreact\";\r\nimport Cart from \"./Cart\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    query: '',\r\n    books: [],\r\n    modal: false\r\n  };\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  updateQuery = (query) => {\r\n    this.setState({query: query});\r\n    const ctx = this;\r\n\r\n    if (this.timeout)\r\n      clearTimeout(this.timeout);\r\n\r\n    DBHelper.search(query).then(function (books) {\r\n      console.log(books);\r\n      if (books) {\r\n        ctx.setState({books: books});\r\n      }\r\n    })\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark primary-color\">\r\n          <a className=\"navbar-brand\" href=\"#\">Dongle Library</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\r\n                  aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"/>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"#\">Home\r\n                  <span className=\"sr-only\">(current)</span>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div className=\"navbar-right\">\r\n              <form className=\"form-inline my-2 my-lg-0 ml-auto\">\r\n                <input className=\"form-control\" style={{width: \"600px\"}} type=\"search\"\r\n                       aria-label=\"Search\"\r\n                       placeholder=\"Search by title or author\"\r\n                       value={this.state.query}\r\n                       onChange={(event) => this.updateQuery(event.target.value)}/>\r\n                <button className=\"btn btn-outline-white btn-md my-2 my-sm-0 ml-3\" type=\"submit\">Search</button>\r\n              </form>\r\n              <MDBContainer>\r\n                <MDBBtn onClick={this.toggle}>Cart</MDBBtn>\r\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle} centered>\r\n                  <MDBModalHeader toggle={this.toggle}>Cart</MDBModalHeader>\r\n                  <Cart/>\r\n                  <MDBModalFooter>\r\n                    <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\r\n                    <MDBBtn color=\"primary\">Download Now</MDBBtn>\r\n                  </MDBModalFooter>\r\n                </MDBModal>\r\n              </MDBContainer>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row my-5\">\r\n            {/* Side bar filter component */}\r\n            <div className=\"col-md-4\">\r\n              <FilterComponent/>\r\n            </div>\r\n\r\n            {/* Result list component */}\r\n            <div className=\"col-md-8\">\r\n              <ResultTableComponent books={this.state.books}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Cart from './Cart';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\n\r\nReactDOM.render(<Router>\r\n    <div>\r\n        <div className=\"main\">\r\n            <Route exact path=\"/\" component={App}/>\r\n            <Route exact path=\"/cart\" component={Cart}/>\r\n        </div>\r\n    </div>\r\n</Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}