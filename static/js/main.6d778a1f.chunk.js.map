{"version":3,"sources":["ResultTableComponent.js","DBHelper.js","FilterComponent.js","HomeView.js","ExploreView.js","App.js","serviceWorker.js","index.js"],"names":["ResultTableComponent","_this","this","books","props","cart","emptyResultString","react_default","a","createElement","className","length","style","height","overflow","id","scope","map","book","index","key","BookName","Author","Category","onClick","onCartUpdate","has","href","Links","React","Component","headers","content-type","api-Key","search","query","fetch","text","method","then","res","json","data","value","type","name","defaultChecked","htmlFor","multiple","HomeView","state","language","format","categories","modal","updateQueryText","queryText","setState","addAllBooks","onCartAddAll","removeAllBooks","onCartRemoveAll","e","preventDefault","ctx","DBHelper","console","log","size","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","isAdded","err","return","_this2","FilterComponent","width","aria-label","placeholder","onChange","event","target","onSearchClicked","src_ResultTableComponent","mdbreact_esm","color","disabled","ExploreView","isModalOpen","collection","toggleCollectionModal","collectionName","Object","assertThisInitialized","catch","alert","closeCollectionModal","src","alt","isOpen","toggle","centered","App","Map","navItem","toggleCartModal","delete","set","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","item","to","data-toggle","data-target","aria-controls","aria-expanded","updateNavItem","Array","from","values","react_router","exact","path","render","src_HomeView","src_ExploreView","Boolean","window","location","hostname","match","ReactDOM","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d778a1f.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass ResultTableComponent extends React.Component {\n\n  render() {\n    const books = this.props.books;\n    const cart = this.props.cart;\n\n    let emptyResultString = \"Your list is empty!\";\n    if (this.props.emptyResultString)\n      emptyResultString = this.props.emptyResultString;\n\n    return (\n      <div className=\"m-4\">\n        {(!books || books.length === 0) &&\n        <p className=\"text-center w-responsive mx-auto mb-3\">{emptyResultString}</p>}\n\n        {books && books.length > 0 &&\n        <div style={{height: \"70vh\", overflow: \"auto\"}}>\n          <table id=\"dtVerticalScrollExample\" className=\"table table-striped\">\n            <thead className=\"primary-color white-text\">\n            <tr>\n              <th scope=\"col\"/>\n              <th scope=\"col\">Book Name</th>\n              <th scope=\"col\">Author</th>\n              <th scope=\"col\">Category</th>\n              <th scope=\"col\">Action</th>\n            </tr>\n            </thead>\n            <tbody>\n            {books && books.map((book, index) =>\n              <tr key={index}>\n                <th scope=\"row\">{index + 1}</th>\n                <td>{book.BookName}</td>\n                <td>{book.Author}</td>\n                <td>{book.Category}</td>\n                <td>\n                  <h6><a onClick={() => this.props.onCartUpdate(book)}>{cart.has(book.id) ?\n                    <span className=\"badge badge-danger\">Remove</span> :\n                    <span className=\"badge badge-success\">Add</span>}</a>\n                  </h6>\n                  <h6><a href={book.Links[0]}><span className=\"badge badge-info\">Download</span></a></h6>\n                </td>\n              </tr>\n            )}\n            </tbody>\n          </table>\n        </div>}\n      </div>\n    );\n  }\n}\n\nexport default ResultTableComponent;","const api = \"https://librarysearchservice.search.windows.net/indexes/booksindex/docs?api-version=2019-05-06&search=\";\n\nlet API_KEY = \"B886F1DAC41FB38BA0126061A30AE32A\"; // Temp API key\n\nconst headers = {\n  'content-type': 'application/json',\n  'api-Key': API_KEY\n};\n\n\nexport const search = (query) => {\n  return fetch(api + query.text, {\n    method: 'GET',\n    headers: headers,\n  }).then(res => res.json())\n    .then(data => data.value);\n};","import React from 'react';\n\n\nclass ResultTableComponent extends React.Component {\n\n\n  render() {\n    return (\n      <div>\n        <h2>Filter</h2>\n        <section className=\"my-4\">\n          <h4>Language</h4>\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language1\"\n                   name=\"inlineDefaultRadiosExample\" defaultChecked={true}/>\n            <label className=\"custom-control-label\" htmlFor=\"language1\">English</label>\n          </div>\n\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language2\"\n                   name=\"inlineDefaultRadiosExample\"/>\n            <label className=\"custom-control-label\" htmlFor=\"language2\">Hindi</label>\n          </div>\n\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language3\"\n                   name=\"inlineDefaultRadiosExample\"/>\n            <label className=\"custom-control-label\" htmlFor=\"language3\">Spanish</label>\n          </div>\n        </section>\n\n        <section className=\"my-4\">\n          <h4>Format</h4>\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format1\" defaultChecked={true}/>\n            <label className=\"custom-control-label\" htmlFor=\"format1\">pdf</label>\n          </div>\n\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format2\" defaultChecked={true}/>\n            <label className=\"custom-control-label\" htmlFor=\"format2\">epub</label>\n          </div>\n\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format3\" defaultChecked={true}/>\n            <label className=\"custom-control-label\" htmlFor=\"format3\">txt</label>\n          </div>\n        </section>\n\n        <section className=\"my-4\">\n          <h4>Categories</h4>\n          <select className=\"custom-select\" style={{height: \"500px\"}} multiple>\n            <option value=\"2\">Math</option>\n            <option value=\"3\">Science</option>\n            <option value=\"4\">Arts & Music</option>\n            <option value=\"5\">Biographies</option>\n            <option value=\"6\">Business</option>\n            <option value=\"7\">Finance</option>\n            <option value=\"8\">Economics</option>\n            <option value=\"9\">Computers & Tech</option>\n            <option value=\"1\">Fairy Tales</option>\n            <option value=\"10\">Fiction</option>\n          </select>\n        </section>\n\n      </div>\n    );\n  }\n}\n\nexport default ResultTableComponent;","import React, {Component} from 'react';\nimport './App.css';\nimport * as DBHelper from \"./DBHelper\";\nimport FilterComponent from \"./FilterComponent\";\nimport ResultTableComponent from \"./ResultTableComponent\";\nimport {MDBBtn, MDBModalFooter} from \"mdbreact\";\n\nclass HomeView extends Component {\n  state = {\n    books: [],\n    query: {\"text\": \"\", \"language\": \"en\", \"format\": [], \"categories\": []},\n    modal: false\n  };\n\n  onSearchClicked(e) {\n    e.preventDefault();\n    let ctx = this, cart = this.props.cart;\n    DBHelper.search(this.state.query).then(function (books) {\n      console.log(books);\n      if (books) {\n        if (cart.size > 0) {\n          for (let book of books) {\n            if (cart.has(book.id)) {\n              book.isAdded = true;\n            }\n          }\n        }\n        ctx.setState({books: books});\n      }\n    });\n  }\n\n  updateQueryText = (queryText) => {\n    let query = this.state.query;\n    query.text = queryText;\n    this.setState({query: query});\n  };\n\n  addAllBooks = () => {\n    this.props.onCartAddAll(this.state.books);\n  };\n\n  removeAllBooks = () => {\n    this.props.onCartRemoveAll(this.state.books);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row my-5\">\n          {/* Side bar filter component */}\n          <div className=\"col-md-3\">\n            <FilterComponent/>\n          </div>\n\n          {/* Result list component */}\n          <div className=\"col-md-9\">\n            <form className=\"form-inline mx-4 mb-4\">\n              <input className=\"form-control\" style={{width: \"100%\"}} type=\"search\"\n                     aria-label=\"Search\"\n                     placeholder=\"Search by title or author\"\n                     value={this.state.query.text}\n                     onChange={(event) => this.updateQueryText(event.target.value)}/>\n              <button className=\"btn btn-primary btn-md ml-4 my-2 my-sm-0\"\n                      onClick={(e) => this.onSearchClicked(e)}>Search\n              </button>\n            </form>\n\n            <ResultTableComponent books={this.state.books}\n                                  cart={this.props.cart}\n                                  onCartUpdate={(id) => this.props.onCartUpdate(id)}\n                                  emptyResultString={\"\"}/>\n\n            {this.state.books && this.state.books.length > 0 &&\n            <MDBModalFooter>\n              <MDBBtn color=\"danger\" disabled={this.state.books <= 0}\n                      onClick={this.removeAllBooks}>Remove all</MDBBtn>\n              <MDBBtn color=\"primary\" disabled={this.state.books <= 0}\n                      onClick={this.addAllBooks}>Add all</MDBBtn>\n            </MDBModalFooter>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomeView;\n","import React, {Component} from 'react';\nimport './App.css';\nimport ResultTableComponent from \"./ResultTableComponent\";\nimport {\n  MDBBtn, MDBModal, MDBModalFooter, MDBModalHeader,\n} from \"mdbreact\";\nimport * as DBHelper from \"./DBHelper\";\n\nclass ExploreView extends Component {\n  state = {\n    isModalOpen: false,\n    collection: {name: null, books: []}\n  };\n\n  toggleCollectionModal = (collectionName) => {\n    if (collectionName) {\n      let ctx = this;\n      DBHelper.search({text: \"*\"}).then(function (books) {\n        console.log(books);\n        if (books) {\n          if (ctx.props.cart.size > 0) {\n            for (let book of books) {\n              if (ctx.props.cart.has(book.id)) {\n                book.isAdded = true;\n              }\n            }\n          }\n          let collection = {name: collectionName, books: books};\n          ctx.setState({\n            isModalOpen: true,\n            collection: collection\n          });\n        }\n      }).catch((e) => {\n        console.log(e);\n        alert(\"Failed to retrieve collection!\");\n      });\n    } else {\n      this.setState({\n        isModalOpen: false,\n        collection: {name: null, books: []}\n      });\n    }\n  };\n\n  addAllBooks = () => {\n    this.props.onCartAddAll(this.state.collection.books);\n  };\n\n  removeAllBooks = () => {\n    this.props.onCartRemoveAll(this.state.collection.books);\n  };\n\n  closeCollectionModal = () => {\n    this.toggleCollectionModal(null)\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row my-5\">\n          {/*Card deck*/}\n          <div className=\"card-deck\">\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src=\"https://mdbootstrap.com/img/Photos/Others/images/15.jpg\"\n                     alt=\"Card image cap\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">K-12 US Literature</h4>\n                <h6>Curated by <a>Robert Koester</a></h6>\n                <p>Language: English</p>\n                <p className=\"card-text\">This collection comprises works of American literature from colonial to\n                  contemporary times, including poetry, short\n                  stories, novels, drama, and nonfiction. The literary works provide opportunities for critical writing,\n                  creative projects, and online discussions. Students develop vocabulary skills and refresh their\n                  knowledge of grammar, usage, and mechanics in preparation for standardized tests.</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"K-12 US Literature\")}>Open collection\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src=\"https://mdbootstrap.com/img/Photos/Others/images/15.jpg\"\n                     alt=\"Card image cap\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">STEM for high school students</h4>\n                <h6>Curated by <a>Darren Moffatt</a></h6>\n                <p>Language: English, Spanish</p>\n                <p className=\"card-text\">Discover meaningful, rigorous books and text sets for a fresh take on\n                  STEM/STEAM\n                  study. Our books explore the physical, life, health, earth and space sciences along with engineering,\n                  art, mathematics, and technology. These high-interest nonfiction, realistic fiction, and science\n                  fiction\n                  books provide an engaging opportunity to discuss timely topics that will expand student knowledge and\n                  inspire the scientists of the future.</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"STEM for high school students\")}>Open collection\n                </button>\n              </div>\n            </div>\n\n            <div className=\"card xs-4\">\n              <div className=\"view overlay\">\n                <img className=\"card-img-top\"\n                     src=\"https://mdbootstrap.com/img/Photos/Others/images/15.jpg\"\n                     alt=\"Card image cap\"/>\n                <a>\n                  <div className=\"mask rgba-white-slight\"/>\n                </a>\n              </div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Fairy Tales</h4>\n                <h6>Curated by <a>Darren Moffatt</a></h6>\n                <p>Language: English</p>\n                <p className=\"card-text\">Read our huge collection of famous fairy tales and bedtime stories. Brothers\n                  Grimm fairy tales, Hans Christian Andersen, Charles Perrault, Aesop's fables,...</p>\n                <button type=\"button\" className=\"btn btn-primary btn-md\"\n                        onClick={() => this.toggleCollectionModal(\"Fairy Tales\")}>Open collection\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <MDBModal isOpen={this.state.isModalOpen} toggle={this.closeCollectionModal} centered size=\"lg\">\n          <MDBModalHeader toggle={this.closeCollectionModal}>{this.state.collection.name}</MDBModalHeader>\n          <ResultTableComponent books={this.state.collection.books}\n                                cart={this.props.cart}\n                                onCartUpdate={(id) => this.props.onCartUpdate(id)}\n                                emptyResultString={\"Collection result is empty!\"}/>\n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={this.closeCollectionModal}>Close</MDBBtn>\n            <MDBBtn color=\"danger\" disabled={this.state.collection.books <= 0}\n                    onClick={this.removeAllBooks}>Remove all</MDBBtn>\n            <MDBBtn color=\"primary\" disabled={this.state.collection.books <= 0}\n                    onClick={this.addAllBooks}>Add all</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </div>\n    );\n  }\n}\n\nexport default ExploreView;\n","import React, {Component} from 'react';\nimport './App.css';\nimport ResultTableComponent from \"./ResultTableComponent\";\nimport {\n  MDBBtn, MDBContainer, MDBModal, MDBModalFooter, MDBModalHeader, NavLink,\n} from \"mdbreact\";\nimport HomeView from \"./HomeView\";\nimport {Route} from \"react-router-dom\";\nimport ExploreView from \"./ExploreView\";\n\nclass App extends Component {\n  state = {\n    cart: new Map(),\n    modal: false,\n    navItem: ''\n  };\n\n  componentDidMount() {\n\n  }\n\n  toggleCartModal = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onCartUpdate(book) {\n    let cart = this.state.cart;\n\n    if (cart.has(book.id)) {\n      cart.delete(book.id);\n    } else {\n      cart.set(book.id, book);\n    }\n\n    this.setState({cart: cart});\n  }\n\n  onCartAddAll(books) {\n    for (let book of books) {\n      let cart = this.state.cart;\n      cart.set(book.id, book);\n      this.setState({cart: cart});\n    }\n  }\n\n  onCartRemoveAll(books) {\n    for (let book of books) {\n      let cart = this.state.cart;\n      cart.delete(book.id);\n      this.setState({cart: cart});\n    }\n  }\n\n  updateNavItem(item) {\n    this.setState({navItem: item});\n  }\n\n  render() {\n    return (\n      <div>\n\n        <nav className=\"navbar navbar-expand-lg navbar-dark primary-color\">\n          <NavLink className=\"navbar-brand\" to=\"/\" href=\"/\">Dongle Library</NavLink>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n                  aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"/>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className={\"nav-item\" + (this.state.navItem === '' ? \" active\" : \"\")}>\n                <NavLink className=\"nav-link\" to=\"/\" href={'/'}\n                         onClick={() => this.updateNavItem('')}>Home\n                  <span className=\"sr-only\">(current)</span>\n                </NavLink>\n              </li>\n              <li className={\"nav-item\" + (this.state.navItem === '/explore' ? \" active\" : \"\")}>\n                <NavLink className=\"nav-link\" to=\"/explore\" href={'/explore'}\n                         onClick={() => this.updateNavItem('/explore')}>Explore\n                  <span className=\"sr-only\">(current)</span>\n                </NavLink>\n              </li>\n            </ul>\n            <div className=\"navbar-right\">\n              <MDBContainer>\n                <MDBBtn onClick={this.toggleCartModal}>Cart <span\n                  className=\"badge badge-danger ml-2\">{this.state.cart.size > 100 ? \"100+\" : this.state.cart.size}</span>\n                </MDBBtn>\n                <MDBModal isOpen={this.state.modal} toggle={this.toggleCartModal} centered size=\"lg\">\n                  <MDBModalHeader toggle={this.toggleCartModal}>Cart</MDBModalHeader>\n                  <ResultTableComponent books={Array.from(this.state.cart.values())}\n                                        cart={this.state.cart}\n                                        onCartUpdate={(id) => this.onCartUpdate(id)}\n                                        emptyResultString={\"Your cart is empty!\"}/>\n                  <MDBModalFooter>\n                    <MDBBtn color=\"secondary\" onClick={this.toggleCartModal}>Close</MDBBtn>\n                    <MDBBtn color=\"primary\" disabled={this.state.cart.size <= 0}>Download Now</MDBBtn>\n                  </MDBModalFooter>\n                </MDBModal>\n              </MDBContainer>\n            </div>\n          </div>\n        </nav>\n\n        <Route exact path={['/', '/front-end']} render={() => (\n          <HomeView cart={this.state.cart}\n                    onCartUpdate={(id) => this.onCartUpdate(id)}\n                    onCartAddAll={(books) => this.onCartAddAll(books)}\n                    onCartRemoveAll={(books) => this.onCartRemoveAll(books)}/>\n        )}/>\n\n        <Route exact path={'/explore'} render={() => (\n          <ExploreView cart={this.state.cart}\n                       onCartUpdate={(id) => this.onCartUpdate(id)}\n                       onCartAddAll={(books) => this.onCartAddAll(books)}\n                       onCartRemoveAll={(books) => this.onCartRemoveAll(books)}/>\n        )}/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onCartUpdate) {\n                config.onCartUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}