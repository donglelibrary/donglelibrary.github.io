{"version":3,"sources":["DBHelper.js","ResultTableComponent.js","FilterComponent.js","Cart.js","App.js","serviceWorker.js","index.js"],"names":["search","query","fetch","concat","method","headers","Headers","Authorization","mode","then","res","json","data","values","catch","e","console","log","ResultTableComponent","books","this","props","react_default","a","createElement","className","scope","map","book","index","key","name","author","categories","React","Component","type","id","htmlFor","multiple","value","Cart","mdbreact_esm","src","alt","style","height","width","href","WAIT_INTERVAL","App","state","modal","updateQuery","_this","setState","ctx","Object","assertThisInitialized","timeout","clearTimeout","setTimeout","DBHelper","toggle","_this2","data-toggle","data-target","aria-controls","aria-expanded","aria-label","placeholder","onChange","event","target","onClick","isOpen","centered","src_Cart","color","FilterComponent","src_ResultTableComponent","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d591101b.chunk.js","sourcesContent":["const api = \"https://librarysearchservice.search.windows.net/indexes/mockdata/docs?api-version=2019-05-06&search=in\";\n\nlet API_KEY = \"B886F1DAC41FB38BA0126061A30AE32A\"; // Temp API key\n\nconst headers = {\n  'Accept': 'application/json',\n  'api-key': API_KEY\n};\n\n\nexport const search = (query) =>\n  fetch(`${api}`, {\n    method: 'GET',\n    headers: new Headers({'Authorization': 'api-key:B886F1DAC41FB38BA0126061A30AE32A'}),\n    mode: 'no-cors',\n  }).then(res => res.json())\n    .then(data => data.values).catch(e => console.log(e));\n","import React from 'react';\n\n\nclass ResultTableComponent extends React.Component {\n\n  render() {\n    const {books} = this.props;\n    return (\n      <table className=\"table\">\n        <thead className=\"primary-color white-text\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Book Name</th>\n          <th scope=\"col\">Author</th>\n          <th scope=\"col\">Category</th>\n        </tr>\n        </thead>\n        <tbody>\n        {books && books.map((book, index) =>\n          <tr key={index}>\n            <th scope=\"row\">{index + 1}</th>\n            <td>{book.name}</td>\n            <td>{book.author}</td>\n            <td>{book.categories}</td>\n          </tr>\n        )}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default ResultTableComponent;","import React from 'react';\n\n\nclass ResultTableComponent extends React.Component {\n\n  render() {\n    const {books} = this.props;\n    return (\n      <div>\n        <h2>Filter</h2>\n        <section className=\"my-4\">\n          <h4>Language</h4>\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language1\"\n                   name=\"inlineDefaultRadiosExample\"/>\n            <label className=\"custom-control-label\" htmlFor=\"language1\">English</label>\n          </div>\n\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language2\"\n                   name=\"inlineDefaultRadiosExample\"/>\n            <label className=\"custom-control-label\" htmlFor=\"language2\">Hindi</label>\n          </div>\n\n          <div className=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" className=\"custom-control-input\" id=\"language3\"\n                   name=\"inlineDefaultRadiosExample\"/>\n            <label className=\"custom-control-label\" htmlFor=\"language3\">Spanish</label>\n          </div>\n        </section>\n\n        <section className=\"my-4\">\n          <h4>Format</h4>\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format1\"/>\n            <label className=\"custom-control-label\" htmlFor=\"format1\">pdf</label>\n          </div>\n\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format2\"/>\n            <label className=\"custom-control-label\" htmlFor=\"format2\">epub</label>\n          </div>\n\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"format3\"/>\n            <label className=\"custom-control-label\" htmlFor=\"format3\">txt</label>\n          </div>\n        </section>\n\n        <section className=\"my-4\">\n          <h4>Categories</h4>\n          <select className=\"custom-select\" multiple>\n            <option value=\"1\">Fairy Tales</option>\n            <option value=\"2\">Math</option>\n            <option value=\"3\">Science</option>\n            <option value=\"4\">Arts & Music</option>\n            <option value=\"5\">Biographies</option>\n            <option value=\"6\">Business</option>\n            <option value=\"7\">Finance</option>\n            <option value=\"8\">Economics</option>\n            <option value=\"9\">Computers & Tech</option>\n          </select>\n        </section>\n\n        <section className=\"my-4\">\n          <h4>Source</h4>\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"source1\"/>\n            <label className=\"custom-control-label\" htmlFor=\"source1\">Something</label>\n          </div>\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"source2\"/>\n            <label className=\"custom-control-label\" htmlFor=\"source2\">Something-2</label>\n          </div>\n\n          <div className=\"custom-control custom-checkbox custom-control-inline\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"source3\"/>\n            <label className=\"custom-control-label\" htmlFor=\"source3\">Something-3</label>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default ResultTableComponent;","import React from 'react';\nimport './App.css';\nimport {MDBBtn, MDBContainer, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader} from \"mdbreact\";\n\nfunction Cart() {\n    return (\n    \t<div className=\"Cart\">\n\t\t\t<MDBModalBody>\n\t\t\t\t{/*(...)*/}\n\n\n\t\t\t\t<div>\n\t\t\t\t\t{/*Card deck*/}\n\t\t\t\t\t<div className=\"card-deck\">\n\t\t\t\t\t\t{/*Card*/}\n\t\t\t\t\t\t<div className=\"card xs-4\">\n\n\t\t\t\t\t\t\t{/*Card image*/}\n\t\t\t\t\t\t\t<div className=\"view overlay\">\n\t\t\t\t\t\t\t\t<img src=\"assets/book.png\" alt=\"Default book image\" style={{\n\t\t\t\t\t\t\t\t\theight: '24px',\n\t\t\t\t\t\t\t\t\twidth: '24px',\n\t\t\t\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t\t\t\t<a href=\"#!\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"mask rgba-white-slight\"></div>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{/*Card content*/}\n\t\t\t\t\t\t\t<div className=\"card-body\">\n\n\n\t\t\t\t\t\t\t\t<h4 className=\"card-title\">Card title</h4>\n\n\t\t\t\t\t\t\t\t<p className=\"card-text\">Some quick example text to build on the card title and make up\n\t\t\t\t\t\t\t\t\tthe bulk\n\t\t\t\t\t\t\t\t\tof\n\t\t\t\t\t\t\t\t\tthe card's content.</p>\n\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t<div className=\"card mb-4\">\n\n\n\t\t\t\t\t\t\t<div className=\"view overlay\">\n\t\t\t\t\t\t\t\t<img className=\"card-img-top\"\n\t\t\t\t\t\t\t\t\t src=\"https://mdbootstrap.com/img/Photos/Others/images/15.jpg\"\n\t\t\t\t\t\t\t\t\t alt=\"Card image cap\"/>\n\t\t\t\t\t\t\t\t\t<a href=\"#!\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"mask rgba-white-slight\"></div>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div className=\"card-body\">\n\n\n\t\t\t\t\t\t\t\t<h4 className=\"card-title\">Card title</h4>\n\n\t\t\t\t\t\t\t\t<p className=\"card-text\">Some quick example text to build on the card title and make up\n\t\t\t\t\t\t\t\t\tthe bulk\n\t\t\t\t\t\t\t\t\tof\n\t\t\t\t\t\t\t\t\tthe card's content.</p>\n\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-light-blue btn-md\">Read more</button>\n\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t</div>\n\n\n\t\t\t</div>\n\t\t\t</MDBModalBody>\n\t\t</div>\n\t);\n}\n\nexport default Cart;\n","import React, {Component} from 'react';\nimport * as DBHelper from './DBHelper'\nimport './App.css';\nimport ResultTableComponent from \"./ResultTableComponent\";\nimport FilterComponent from \"./FilterComponent\";\nimport {MDBBtn, MDBContainer, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader} from \"mdbreact\";\nimport Cart from \"./Cart\";\n\nconst WAIT_INTERVAL = 1000;\n\nclass App extends Component {\n  state = {\n    query: '',\n    books: [],\n    modal: false\n  };\n\n  componentDidMount() {\n  }\n\n  updateQuery = (query) => {\n    this.setState({query: query});\n    const ctx = this;\n\n    if (this.timeout)\n      clearTimeout(this.timeout);\n\n    this.timeout = setTimeout(() => {\n      DBHelper.search(query).then(function (books) {\n        if (books) {\n          ctx.setState({books: books});\n        }\n      })\n    }, WAIT_INTERVAL);\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-dark primary-color\">\n          <a className=\"navbar-brand\" href=\"#\">Dongle Library</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n                  aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"/>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item active\">\n                <a className=\"nav-link\" href=\"#\">Home\n                  <span className=\"sr-only\">(current)</span>\n                </a>\n              </li>\n            </ul>\n            <div className=\"navbar-right\">\n              <form className=\"form-inline my-2 my-lg-0 ml-auto\">\n                <input className=\"form-control\" style={{width: \"600px\"}} type=\"search\"\n                       aria-label=\"Search\"\n                       placeholder=\"Search by title or author\"\n                       value={this.state.query}\n                       onChange={(event) => this.updateQuery(event.target.value)}/>\n                <button className=\"btn btn-outline-white btn-md my-2 my-sm-0 ml-3\" type=\"submit\">Search</button>\n              </form>\n              <MDBContainer>\n                <MDBBtn onClick={this.toggle}>Cart</MDBBtn>\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle} centered>\n                  <MDBModalHeader toggle={this.toggle}>Cart</MDBModalHeader>\n                  <Cart/>\n                  <MDBModalFooter>\n                    <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\n                    <MDBBtn color=\"primary\">Download Now</MDBBtn>\n                  </MDBModalFooter>\n                </MDBModal>\n              </MDBContainer>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"container\">\n          <div className=\"row my-5\">\n            {/* Side bar filter component */}\n            <div className=\"col-md-4\">\n              <FilterComponent/>\n            </div>\n\n            {/* Result list component */}\n            <div className=\"col-md-8\">\n              <ResultTableComponent books={this.state.books}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Cart from './Cart';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\nReactDOM.render(<Router>\n    <div>\n        <div className=\"main\">\n            <Route exact path=\"/\" component={App}/>\n            <Route exact path=\"/cart\" component={Cart}/>\n        </div>\n    </div>\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}